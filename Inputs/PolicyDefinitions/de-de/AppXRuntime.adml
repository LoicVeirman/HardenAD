<?xml version="1.0" encoding="utf-8"?>
<!--  Copyright (C) Microsoft. All rights reserved.  -->
<policyDefinitionResources xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" revision="1.0" schemaVersion="1.0" xmlns="http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions">
  <displayName>App-Laufzeit</displayName>
  <description>Richtlinien für die App-Laufzeit</description>
  <resources>
    <stringTable>
      <string id="AppxRuntime">App-Laufzeit</string>
      <string id="AppxRuntime_Help">Enthält Einstellungen zum Verwalten des Verhaltens von Windows Store-Apps.</string>
      <string id="AppxRuntimeBlockFileElevation">Starten von einer Datei zugeordneten Desktop-Apps verhindern</string>
      <string id="AppxRuntimeBlockFileElevationExplanation">Mit dieser Richtlinieneinstellung können Sie steuern, ob Dateien von Windows Store-Apps mithilfe der Standard-Desktop-App für einen Dateityp geöffnet werden können. Da Desktop-Apps auf einer höheren Integritätsebene ausgeführt werden als Windows Store-Apps, besteht das Risiko, dass eine Windows Store-App durch das Öffnen einer Datei in der Standard-Desktop-App für einen Dateityp das System gefährdet.

Wenn Sie diese Richtlinieneinstellung aktivieren, können Dateien von Windows Store-Apps nicht in der Standard-Desktop-App für einen Dateityp, sondern nur in anderen Windows Store-Apps geöffnet werden.

Wenn Sie diese Richtlinieneinstellung deaktivieren oder nicht konfigurieren, können Dateien von Windows Store-Apps in der Standard-Desktop-App für einen Dateityp geöffnet werden.</string>
      <string id="AppxRuntimeBlockProtocolElevation">Starten von Desktop-Apps, die einem URI-Schema zugeordnet sind, verhindern</string>
      <string id="AppxRuntimeBlockProtocolElevationExplanation">Mit dieser Richtlinieneinstellung können Sie steuern, ob URIs von Windows Store-Apps mithilfe der Standard-Desktop-App für ein URI-Schema geöffnet werden können. Da Desktop-Apps auf einer höheren Integritätsebene ausgeführt werden als Windows Store-Apps, besteht das Risiko, dass ein von einer Windows Store-App gestartetes URI-Schema durch das Starten einer Desktop-App das System gefährdet.

Wenn Sie diese Richtlinieneinstellung aktivieren, können URIs von Windows Store-Apps nicht in der Standard-Desktop-App für ein URI-Schema, sondern nur in anderen Windows Store-Apps geöffnet werden.

Wenn Sie diese Richtlinieneinstellung deaktivieren oder nicht konfigurieren, können URIs von Windows Store-Apps in der Standard-Desktop-App für ein URI-Schema geöffnet werden.

Hinweis: Das Aktivieren dieser Richtlinieneinstellung verhindert nicht, dass Windows Store-Apps die Standard-Desktop-App für die URI-Schemas "HTTP", "HTTPS" und "MailTo" starten. Die Handler für diese URI-Schemas sind für URI-basierte Schwachstellen aus nicht vertrauenswürdigen Quellen gerüstet und verringern so das damit verbundene Risiko.</string>
      <string id="AppxRuntimeApplicationContentUriRules">Dynamische Regeln für den Inhalts-URI für Windows Store-Apps aktivieren</string>
      <string id="AppxRuntimeApplicationContentUriRulesExplanation">Mit dieser Richtlinieneinstellung können Sie Regeln für den Inhalts-URI aktivieren, die die statischen Regeln für den Inhalts-URI ergänzen, die als Teil des App-Manifests definiert wurden und für alle Windows Store-Apps gelten, die auf einem Computer die enterpriseAuthentication-Funktion verwenden.

Wenn Sie diese Richtlinieneinstellung aktivieren, können Sie zusätzliche Regeln für den Inhalts-URI definieren, die von allen Windows Store-Apps genutzt werden können, die auf einem Computer die enterpriseAuthentication-Funktion verwenden.

Wenn Sie diese Richtlinieneinstellung deaktivieren oder nicht festlegen, verwenden Windows Store-Apps nur die statischen Regeln für den Inhalts-URI.</string>
      <string id="AppxRuntimeMicrosoftAccountsOptional">Zulassen, dass Microsoft-Konten optional sind</string>
      <string id="AppxRuntimeMicrosoftAccountsOptionalExplanation">Mit dieser Richtlinieneinstellung können Sie steuern, ob Microsoft-Konten optional für Windows Store-Apps sind, die ein Konto zum Anmelden erfordern. Diese Richtlinie gilt nur für Windows Store-Apps, die sie unterstützen.

Wenn Sie diese Richtlinieneinstellung aktivieren, können sich Benutzer mit einem Unternehmenskonto an Windows Store-Apps anmelden, die in der Regel ein Microsoft-Konto zum Anmelden erfordern.

Wenn Sie diese Richtlinieneinstellung deaktivieren oder nicht konfigurieren, müssen sich Benutzer mit einem Microsoft-Konto anmelden.</string>
      <string id="AppxRuntimeBlockHostedAppAccessWinRT">Starten von universellen Windows-Apps mit Windows-Runtime-API-Zugriff von gehosteten Inhalten aus blockieren</string>
      <string id="AppxRuntimeBlockHostedAppAccessWinRTExplanation">
        Diese Richtlinieneinstellung steuert, ob universelle Windows-Apps mit direktem Windows-Runtime-API-Zugriff von Webinhalten aus gestartet werden können.

        Wenn Sie diese Richtlinieneinstellung aktivieren, können universelle Windows-Apps, für die Windows-Runtime-API-Zugriff im ApplicationContentUriRules-Abschnitt des Manifests deklariert ist, nicht gestartet werden. Universelle Windows-Apps, für die im Manifest kein Windows-Runtime-API-Zugriff deklariert wurde, sind nicht betroffen.

        Wenn Sie diese Richtlinieneinstellung deaktivieren oder nicht konfigurieren, können alle universellen Windows-Apps gestartet werden.

        Diese Richtlinie sollte nur dann aktiviert werden, wenn sie von Microsoft als Sicherheitsantwort empfohlen wird, da dies zu schwerwiegenden Problemen bei der App-Kompatibilität führen kann.
      </string>
    </stringTable>
    <presentationTable>
      <presentation id="AppxRuntimeApplicationContentUriRules">
        <text>Zum Aktivieren dynamischer Regeln für den Inhalts-URI klicken Sie auf "Anzeigen" und geben dann die Regeln für den Inhalts-URI in die Liste ein.</text>
        <listBox refId="ListBox_ContentUriRules" required="false">Regeln für den Inhalts-URI:  </listBox>
        <text>Es werden nur URIs im Format "https://" unterstützt.</text>
      </presentation>
    </presentationTable>
  </resources>
</policyDefinitionResources>
