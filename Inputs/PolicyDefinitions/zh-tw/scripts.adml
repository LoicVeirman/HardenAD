<?xml version="1.0" encoding="utf-8"?>
<!--  (c) 2006 Microsoft Corporation  -->
<policyDefinitionResources xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" revision="1.0" schemaVersion="1.0" xmlns="http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions">
  <displayName>在此輸入顯示名稱</displayName>
  <description>在此輸入描述</description>
  <resources>
    <stringTable>
      <string id="MaxGPOScriptWaitPolicy">指定群組原則指令碼的最長等待時間</string>
      <string id="MaxGPOScriptWaitPolicy_Help">這個原則設定可以決定系統等候由群組原則所套用之指令碼執行的時間。

這個設定會限制允許由群組原則套用之所有登入、登出、啟動及關機指令碼完成執行的總時間。如果指定的時間已到，而指令碼尚未完成執行，系統會停止處理指令碼，並記錄一個錯誤事件。

如果您啟用這個設定，請在 [秒] 方塊中輸入介於 1 到 32,000 的數字，做為您要系統等候整組指令碼完成的秒數。若要指示系統等候，不論花費多少時間，直到指令碼完成執行，請輸入 0。

這個時間間隔對於其他必須等候指令碼完成的系統工作尤其重要。根據預設，每一個啟動指令碼都必須在下一個指令碼執行之前完成。另外，您可以使用 [同步執行登入指令檔] 設定，來指示系統需等候到登入指令碼完成之後才可載入桌面。

過長的間隔會使系統延遲，並對使用者造成不便。不過，如果間隔太短，則可能在事先必須準備的工作完成之前，系統就已出現就緒的狀況 (但也許並非真正就緒)。

如果您停用或未設定這個設定，系統會讓整組指令碼最多執行 600 秒 (10 分鐘)。這是預設值。</string>
      <string id="Run_Legacy_Logon_Script_Hidden">隱藏前版指令碼的執行狀態</string>
      <string id="Run_Legacy_Logon_Script_Hidden_Explain">這個原則設定會隱藏登入指令碼中為 Windows NT 4.0 及更早版本所寫的指示。

登入指令碼是使用者登入時執行的指示批次檔。根據預設，Windows 2000 在執行登入指令碼中的指示時，會將登入指令碼中為 Windows NT 4.0 及更早版本所寫的指示顯示在命令視窗中，但不會顯示為 Windows 2000 所寫的指示。

如果您啟用這個設定，Windows 2000 不會顯示為 Windows NT 4.0 及更早版本所寫的登入指令碼。

如果您停用或未設定這個原則設定，Windows 2000 會顯示針對 Windows NT 4.0 或更舊版本而設計的登入指令碼。

另請參閱 [顯示登入指令碼的執行狀態] 設定。</string>

      <string id="Run_Logoff_Script_Visible">執行登出指令碼時顯示其中的指示</string>
      <string id="Run_Logoff_Script_Visible_Explain">這個原則設定會在執行登出指令碼時顯示其中的指示。

登出指令碼是使用者登出時執行的指示批次檔。根據預設，系統不會顯示登出指令碼中的指示。

如果您啟用這個原則設定，系統會在執行登出指令碼時，顯示其中的每個指示。指示會出現在命令視窗中。這個原則設定是針對進階使用者所設計。

如果您停用或未設定這個原則設定，則不會顯示指示。</string>
      <string id="Run_Logon_Script_Sync">同步執行登入指令檔</string>
      <string id="Run_Logon_Script_Sync_Help">這個原則設定會指示系統在啟動 [檔案總管] 介面程式和建立桌面之前，先等候登入指令碼完成執行。

如果您啟用這個原則設定，在登入指令碼完成執行之前，[檔案總管] 將不會啟動。這個原則設定可以確保登入指令碼的處理會在使用者開始工作前完成，但是可能會延遲桌面的出現。

如果您停用或未設定這個原則設定，登入指令碼和 [檔案總管] 就不會同步處理，而且可以同時執行。

這個原則設定會同時出現在 [電腦設定] 及 [使用者設定] 資料夾中。在 [電腦設定] 中設定之原則設定的優先順序高於在 [使用者設定] 中設定的設定值。</string>
      <string id="Run_Logon_Script_Visible">執行登入指令碼時顯示其中的指示</string>
      <string id="Run_Logon_Script_Visible_Explain">這個原則設定會在執行登入指令碼時顯示其中的指示。

登入指令碼是使用者登入時執行的指示批次檔。根據預設，系統不會顯示登入指令碼中的指示。

如果您啟用這個原則設定，系統會在執行登入指令碼時，顯示其中的每個指示。指示會出現在命令視窗中。這個原則設定是針對進階使用者所設計。

如果您停用或未設定這個原則設定，則不會顯示指示。</string>

      <string id="Run_Computer_PS_Scripts_First">電腦啟動、關機時先執行 Windows PowerShell 指令碼</string>
      <string id="Run_Computer_PS_Scripts_First_Explain">這個原則設定會決定電腦啟動和關機時，是否先執行 Windows PowerShell 指令碼後，再執行非 Windows PowerShell 指令碼。根據預設，Windows PowerShell 指令碼會在非 Windows PowerShell 指令碼之後執行。
 
如果您啟用這個原則設定，在電腦啟動和關機期間，每個適用的原則群組物件 (GPO) 中的 Windows PowerShell 指令碼會在非 Windows PowerShell 指令碼之前執行。

例如，假設有下列案例: 

有三個 GPO (GPO A、GPO B 和 GPO C)。GPO A 會啟用這個原則設定。 

GPO B 和 GPO C 包含以下電腦啟動指令碼:

GPO B: B.cmd、B.ps1
GPO C: C.cmd、C.ps1

同時假設目前有兩部電腦，DesktopIT 和 DesktopSales。
DesktopIT 已經套用 GPO A、GPO B 和 GPO C。因此，GPO B 和 C 的指令碼會按照以下順序，針對 DesktopIT 執行:

在 GPO B 中: B.ps1、B.cmd
在 GPO C 中: C.ps1、C.cmd
 
至於 DesktopSales 套用了 GPO B 和 C，但沒有套用 GPO A。因此，GPO B 和 C 的指令碼會按照以下順序，針對 DesktopSales 執行:

在 GPO B 中: B.cmd、B.ps1
在 GPO C 中: C.cmd、C.ps1

注意: 這個原則設定會決定所有可用的 GPO 中，電腦啟動和關機指令碼的執行順序。您可以設定 GPO 的以下原則設定，即可為特定 GPO 中，特定類型的指令碼覆寫這個原則設定:
 
電腦設定\原則\Windows 設定\指令碼 (啟動/關機)\啟動
電腦設定\原則\Windows 設定\指令碼 (啟動/關機)\關機

</string>
      <string id="Run_User_PS_Scripts_First">使用者登入、登出時先執行 Windows PowerShell 指令碼</string>
      <string id="Run_User_PS_Scripts_First_Explain">這個原則設定會決定使用者登入和登出時，是否先執行 Windows PowerShell 指令碼後，再執行非 Windows PowerShell 指令碼。根據預設，Windows PowerShell 指令碼會在非 Windows PowerShell 指令碼之後執行。
 
如果您啟用這個原則設定，在使用者登入和登出時，每個適用的原則群組物件 (GPO) 中的 Windows PowerShell 指令碼會在非 Windows PowerShell 指令碼之前執行。

例如，假設有下列案例: 

有三個 GPO (GPO A、GPO B 和 GPO C)。GPO A 會啟用這個原則設定。 

GPO B 和 GPO C 包含以下使用者登入指令碼:

GPO B: B.cmd、B.ps1
GPO C: C.cmd、C.ps1

同時假設目前有兩位使用者，Qin Hong 和 Tamara Johnston。
Qin 已經套用 GPO A、GPO B 和 GPO C。因此，GPO B 和 C 的指令碼會按照以下順序，針對 Qin 執行:

在 GPO B 中: B.ps1、B.cmd
在 GPO C 中: C.ps1、C.cmd
 
至於 Tamara 套用了 GPO B 和 C，但沒有套用 GPO A。因此，GPO B 和 C 的指令碼會按照以下順序，針對 Tamara 執行:

在 GPO B 中: B.cmd、B.ps1
在 GPO C 中: C.cmd、C.ps1

注意: 這個原則設定會決定所有可用的 GPO 中，使用者登入和登出指令碼的執行順序。您可以設定 GPO 的以下原則設定，即可為特定 GPO 中，特定類型的指令碼覆寫這個原則設定:
 
使用者設定\原則\Windows 設定\指令碼 (啟動/關機)\登入
使用者設定\原則\Windows 設定\指令碼 (啟動/關機)\登出

這個原則設定會顯示在 [電腦設定] 資料夾以及 [使用者設定] 資料夾。在 [電腦設定] 中設定之原則設定的優先順序高於在 [使用者設定] 中設定的設定值。

</string>
      <string id="Run_Shutdown_Script_Visible">執行關機指令碼時顯示其中的指示。</string>
      <string id="Run_Shutdown_Script_Visible_Explain">這個原則設定會在執行關機指令碼時顯示其中的指示。

關機指令碼是使用者重新啟動系統或關閉系統時執行的指示批次檔。根據預設，系統不會顯示關機指令碼中的指示。

如果您啟用這個原則設定，系統會在執行關機指令碼時，顯示其中的每個指示。指示會出現在命令視窗中。

如果您停用或未設定這個原則設定，則不會顯示指示。</string>
      <string id="Run_Startup_Script_Sync">非同步執行啟動指令碼</string>
      <string id="Run_Startup_Script_Sync_Help">這個原則設定允許系統同時執行啟動指令碼。

啟動指令碼是使用者登入前執行的批次檔。根據預設，系統會先完成每個啟動指令碼後，再執行下一個啟動指令碼。

如果您啟用這個原則設定，系統不會協調啟動指令碼的執行順序。因此，啟動指令碼可以同時執行。

如果您停用或未設定這個原則設定，則必須等前一個指令碼完成後，才能執行下一個啟動指令碼。

注意: 從 Windows Vista 作業系統開始，不論 [顯示啟動指令碼的執行狀態] 是否啟用，都無法再顯示非同步執行啟動指令碼。</string>
      <string id="Run_Startup_Script_Visible">執行啟動指令碼時顯示其中的指示。</string>
      <string id="Run_Startup_Script_Visible_Explain">這個原則設定會在執行啟動指令碼時顯示其中的指示。

啟動指令碼是使用者登入前執行的指示批次檔。根據預設，系統不會顯示啟動指令碼中的指示。

如果您啟用這個原則設定，系統會在執行啟動指令碼時，顯示其中的每個指示。指示會出現在命令視窗中。這個原則設定是針對進階使用者所設計。

如果您停用或未設定這個原則設定，則不會顯示指示。

注意: 從 Windows Vista 作業系統開始，不論這個原則設定是否啟用，都無法再顯示非同步執行啟動指令碼。</string>
      <string id="Allow_Logon_Script_NetbiosDisabled">停用 NetBIOS 或 WINS 時允許登入指令碼</string>
      <string id="Allow_Logon_Script_NetbiosDisabled_Explain">當跨樹系登入、DNS 尾碼未設定，並且停用 NetBIOS 或 WINS 時，這個原則設定允許執行使用者登入指令碼。這個原則設定會影響互動式登入電腦的所有使用者帳戶。

若啟用這個原則設定，則如果在跨樹系登入時停用 NetBIOS 或 WINS，而且未設定 DNS 尾碼，將執行使用者登入指令碼。

如果您停用或未設定這個原則設定，連 NetBIOS 或 WINS 也停用了，DNS 尾碼也沒有設定，則使用者帳戶跨樹系，互動式登入將無法執行登入指令碼。</string>
      <string id="Scripts">指令碼</string>
    </stringTable>
    <presentationTable>
      <presentation id="MaxGPOScriptWaitPolicy">
        <decimalTextBox refId="MaxGPOScriptWait" defaultValue="600">秒:</decimalTextBox>
        <text>範圍從 0 到 32000，使用 0 來表示無限期等待</text>
      </presentation>
    </presentationTable>
  </resources>
</policyDefinitionResources>
