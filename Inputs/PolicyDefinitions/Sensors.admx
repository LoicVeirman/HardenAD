<?xml version="1.0" encoding="utf-8"?>
<!--  (c) 2006 Microsoft Corporation  -->
<policyDefinitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" revision="1.0" schemaVersion="1.0" xmlns="http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions">
  <policyNamespaces>
    <target prefix="sensors" namespace="Microsoft.Policies.Sensors" />
    <using prefix="windows" namespace="Microsoft.Policies.Windows" />
  </policyNamespaces>
  <resources minRequiredRevision="1.0" />
  <categories>
    <category name="LocationAndSensors" displayName="$(string.LocationAndSensors)">
      <parentCategory ref="windows:WindowsComponents" />
    </category>
    <category name="HumanPresence" displayName="$(string.HumanPresence)">
      <parentCategory ref="windows:WindowsComponents" />
    </category>
  </categories>
  <policies>
    <policy name="DisableSensors_1" class="User" displayName="$(string.DisableSensors)" explainText="$(string.DisableSensors_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableSensors">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="DisableSensors_2" class="Machine" displayName="$(string.DisableSensors)" explainText="$(string.DisableSensors_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableSensors">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="DisableLocation_1" class="User" displayName="$(string.DisableLocation)" explainText="$(string.DisableLocation_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableLocation">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="DisableLocation_2" class="Machine" displayName="$(string.DisableLocation)" explainText="$(string.DisableLocation_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableLocation">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="DisableLocationScripting_1" class="User" displayName="$(string.DisableLocationScripting)" explainText="$(string.DisableLocationScripting_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableLocationScripting">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="DisableLocationScripting_2" class="Machine" displayName="$(string.DisableLocationScripting)" explainText="$(string.DisableLocationScripting_Explain)" key="Software\Policies\Microsoft\Windows\LocationAndSensors" valueName="DisableLocationScripting">
      <parentCategory ref="LocationAndSensors" />
      <supportedOn ref="windows:SUPPORTED_Windows7"/>
      <enabledValue>
        <decimal value="1" />
      </enabledValue>
      <disabledValue>
        <decimal value="0" />
      </disabledValue>
    </policy>
    <policy name="ForceInstantWake" class="Machine" displayName="$(string.ForceInstantWake_DisplayName)" explainText="$(string.ForceInstantWake_ExplainText)" presentation="$(presentation.ForceInstantWake)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceInstantWake">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceInstantWakeDropdown" valueName="ForceInstantWake" required="true">
          <item displayName="$(string.ForceInstantWake_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceInstantWake_1)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceInstantWake_2)">
            <value>
              <decimal value="2" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
    <policy name="ForceInstantLock" class="Machine" displayName="$(string.ForceInstantLock_DisplayName)" explainText="$(string.ForceInstantLock_ExplainText)" presentation="$(presentation.ForceInstantLock)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceInstantLock">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceInstantLockDropdown" valueName="ForceInstantLock" required="true">
          <item displayName="$(string.ForceInstantLock_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceInstantLock_1)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceInstantLock_2)">
            <value>
              <decimal value="2" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
    <policy name="ForceLockTimeout" class="Machine" displayName="$(string.ForceLockTimeout_DisplayName)" explainText="$(string.ForceLockTimeout_ExplainText)" presentation="$(presentation.ForceLockTimeout)" key="Software\Policies\Microsoft\HumanPresence">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceLockTimeoutDropdown" valueName="ForceLockTimeout" required="true">
          <item displayName="$(string.ForceLockTimeout_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceLockTimeout_4)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceLockTimeout_1)">
            <value>
              <decimal value="10" />
            </value>
          </item>
          <item displayName="$(string.ForceLockTimeout_2)">
            <value>
              <decimal value="30" />
            </value>
          </item>
          <item displayName="$(string.ForceLockTimeout_3)">
            <value>
              <decimal value="120" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
    <policy name="ForceInstantDim" class="Machine" displayName="$(string.ForceInstantDim_DisplayName)" explainText="$(string.ForceInstantDim_ExplainText)" presentation="$(presentation.ForceInstantDim)" key="Software\Policies\Microsoft\HumanPresence">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
        <elements>
          <enum id="ForceInstantDimDropdown" valueName="ForceInstantDim" required="true">
            <item displayName="$(string.ForceInstantDim_0)">
              <value>
                <decimal value="0" />
              </value>
            </item>
            <item displayName="$(string.ForceInstantDim_1)">
              <value>
                <decimal value="1" />
              </value>
            </item>
            <item displayName="$(string.ForceInstantDim_2)">
              <value>
                <decimal value="2" />
              </value>
            </item>
          </enum>
        </elements>
    </policy>
    <policy name="ForceDisableWakeWhenBatterySaverOn" class="Machine" displayName="$(string.ForceDisableWakeWhenBatterySaverOn_DisplayName)" explainText="$(string.ForceDisableWakeWhenBatterySaverOn_ExplainText)" presentation="$(presentation.ForceDisableWakeWhenBatterySaverOn)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceDisableWakeWhenBatterySaverOn">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
        <elements>
          <enum id="ForceDisableWakeWhenBatterySaverOnDropdown" valueName="ForceDisableWakeWhenBatterySaverOn" required="true">
            <item displayName="$(string.ForceDisableWakeWhenBatterySaverOn_0)">
              <value>
                <decimal value="0" />
              </value>
            </item>
            <item displayName="$(string.ForceDisableWakeWhenBatterySaverOn_1)">
              <value>
                <decimal value="1" />
              </value>
            </item>
            <item displayName="$(string.ForceDisableWakeWhenBatterySaverOn_2)">
              <value>
                <decimal value="2" />
              </value>
            </item>
          </enum>
        </elements>
    </policy>
    <policy name="ForceAllowWakeWhenExternalDisplayConnected" class="Machine" displayName="$(string.ForceAllowWakeWhenExternalDisplayConnected_DisplayName)" explainText="$(string.ForceAllowWakeWhenExternalDisplayConnected_ExplainText)" presentation="$(presentation.ForceAllowWakeWhenExternalDisplayConnected)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceAllowWakeWhenExternalDisplayConnected">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceAllowWakeWhenExternalDisplayConnectedDropdown" valueName="ForceAllowWakeWhenExternalDisplayConnected" required="true">
          <item displayName="$(string.ForceAllowWakeWhenExternalDisplayConnected_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowWakeWhenExternalDisplayConnected_1)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowWakeWhenExternalDisplayConnected_2)">
            <value>
              <decimal value="2" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
    <policy name="ForceAllowLockWhenExternalDisplayConnected" class="Machine" displayName="$(string.ForceAllowLockWhenExternalDisplayConnected_DisplayName)" explainText="$(string.ForceAllowLockWhenExternalDisplayConnected_ExplainText)" presentation="$(presentation.ForceAllowLockWhenExternalDisplayConnected)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceAllowLockWhenExternalDisplayConnected">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceAllowLockWhenExternalDisplayConnectedDropdown" valueName="ForceAllowLockWhenExternalDisplayConnected" required="true">
          <item displayName="$(string.ForceAllowLockWhenExternalDisplayConnected_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowLockWhenExternalDisplayConnected_1)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowLockWhenExternalDisplayConnected_2)">
            <value>
              <decimal value="2" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
    <policy name="ForceAllowDimWhenExternalDisplayConnected" class="Machine" displayName="$(string.ForceAllowDimWhenExternalDisplayConnected_DisplayName)" explainText="$(string.ForceAllowDimWhenExternalDisplayConnected_ExplainText)" presentation="$(presentation.ForceAllowDimWhenExternalDisplayConnected)" key="Software\Policies\Microsoft\HumanPresence" valueName="ForceAllowDimWhenExternalDisplayConnected">
      <parentCategory ref="HumanPresence" />
      <supportedOn ref="windows:SUPPORTED_Windows_10_0_NOSERVER" />
      <elements>
        <enum id="ForceAllowDimWhenExternalDisplayConnectedDropdown" valueName="ForceAllowDimWhenExternalDisplayConnected" required="true">
          <item displayName="$(string.ForceAllowDimWhenExternalDisplayConnected_0)">
            <value>
              <decimal value="0" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowDimWhenExternalDisplayConnected_1)">
            <value>
              <decimal value="1" />
            </value>
          </item>
          <item displayName="$(string.ForceAllowDimWhenExternalDisplayConnected_2)">
            <value>
              <decimal value="2" />
            </value>
          </item>
        </enum>
      </elements>
    </policy>
  </policies>
</policyDefinitions>
