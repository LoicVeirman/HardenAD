<?xml version="1.0" encoding="utf-8"?>
<!--  Copyright (C) Microsoft. All rights reserved.  -->
<policyDefinitionResources xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" revision="1.0" schemaVersion="1.0" xmlns="http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions">
  <displayName>App runtime</displayName>
  <description>App runtime policies</description>
  <resources>
    <stringTable>
      <string id="AppxRuntime">App runtime</string>
      <string id="AppxRuntime_Help">Contains settings to manage the behavior of Windows Store apps.</string>
      <string id="AppxRuntimeBlockFileElevation">Block launching desktop apps associated with a file.</string>
      <string id="AppxRuntimeBlockFileElevationExplanation">This policy setting lets you control whether Windows Store apps can open files using the default desktop app for a file type. Because desktop apps run at a higher integrity level than Windows Store apps, there is a risk that a Windows Store app might compromise the system by opening a file in the default desktop app for a file type.

If you enable this policy setting, Windows Store apps cannot open files in the default desktop app for a file type; they can open files only in other Windows Store apps.

If you disable or do not configure this policy setting, Windows Store apps can open files in the default desktop app for a file type.</string>
      <string id="AppxRuntimeBlockProtocolElevation">Block launching desktop apps associated with a URI scheme</string>
      <string id="AppxRuntimeBlockProtocolElevationExplanation">This policy setting lets you control whether Windows Store apps can open URIs using the default desktop app for a URI scheme. Because desktop apps run at a higher integrity level than Windows Store apps, there is a risk that a URI scheme launched by a Windows Store app might compromise the system by launching a desktop app.

If you enable this policy setting, Windows Store apps cannot open URIs in the default desktop app for a URI scheme; they can open URIs only in other Windows Store apps.

If you disable or do not configure this policy setting, Windows Store apps can open URIs in the default desktop app for a URI scheme.

Note: Enabling this policy setting does not block Windows Store apps from opening the default desktop app for the http, https, and mailto URI schemes. The handlers for these URI schemes are hardened against URI-based vulnerabilities from untrusted sources, reducing the associated risk.</string>
      <string id="AppxRuntimeApplicationContentUriRules">Turn on dynamic Content URI Rules for Windows store apps</string>
      <string id="AppxRuntimeApplicationContentUriRulesExplanation">This policy setting lets you turn on Content URI Rules to supplement the static Content URI Rules that were defined as part of the app manifest and apply to all Windows Store apps that use the enterpriseAuthentication capability on a computer.

If you enable this policy setting, you can define additional Content URI Rules that all Windows Store apps that use the enterpriseAuthentication capability on a computer can use.

If you disable or don't set this policy setting, Windows Store apps will only use the static Content URI Rules.</string>
      <string id="AppxRuntimeMicrosoftAccountsOptional">Allow Microsoft accounts to be optional</string>
      <string id="AppxRuntimeMicrosoftAccountsOptionalExplanation">This policy setting lets you control whether Microsoft accounts are optional for Windows Store apps that require an account to sign in. This policy only affects Windows Store apps that support it.

If you enable this policy setting, Windows Store apps that typically require a Microsoft account to sign in will allow users to sign in with an enterprise account instead.

If you disable or do not configure this policy setting, users will need to sign in with a Microsoft account.</string>
      <string id="AppxRuntimeBlockHostedAppAccessWinRT">Block launching Universal Windows apps with Windows Runtime API access from hosted content.</string>
      <string id="AppxRuntimeBlockHostedAppAccessWinRTExplanation">
        This policy setting controls whether Universal Windows apps with Windows Runtime API access directly from web content can be launched.

        If you enable this policy setting, Universal Windows apps which declare Windows Runtime API access in ApplicationContentUriRules section of the manifest cannot be launched; Universal Windows apps which have not declared Windows Runtime API access in the manifest are not affected.

        If you disable or do not configure this policy setting, all Universal Windows apps can be launched.

        This policy should not be enabled unless recommended by Microsoft as a security response because it can cause severe app compatibility issues.
      </string>
    </stringTable>
    <presentationTable>
      <presentation id="AppxRuntimeApplicationContentUriRules">
        <text>To turn on dynamic Content URI Rules, click Show, and then type the Content URI Rules in the list.</text>
        <listBox refId="ListBox_ContentUriRules" required="false">Content URI Rules: </listBox>
        <text>Only https:// URIs are supported.</text>
      </presentation>
    </presentationTable>
  </resources>
</policyDefinitionResources>
